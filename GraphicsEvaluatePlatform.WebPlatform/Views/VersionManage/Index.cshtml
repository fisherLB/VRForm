@using GraphicsEvaluatePlatform.Service;
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta http-equiv="Pragma" content="no-cache" />
    <meta http-equiv="Cache-Control" content="no-cache" />
    <meta http-equiv="expires" content="0" />
    <title>版本管理</title>
    <link href="~/Content/bootstrap/css/bootstrap.min.css" rel="stylesheet" type="text/css">
    <link rel="stylesheet" href="~/Content/bootstrap/css/bootstrap-table.css" />
    <link rel="stylesheet" href="~/Content/bootstrap/css/bootstrap-switch.css" />
    <link href="~/Content/css/main.css" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" href="~/Content/font-awesome/css/font-awesome.css">
    <link rel="stylesheet" href="~/Content/bootstrap/css/bootstrap-tab.css">
    <link rel="stylesheet" href="~/Content/bootstrap/css/tree.css" />
    <script src="~/Scripts/jquery-1.10.2.js" type="text/javascript"></script>
    <script src="~/Scripts/bootstrap/bootstrap.min.js" type="text/javascript"></script>
    <script src="~/Scripts/layer/layer.js" type="text/javascript"></script>
    <script src="~/Scripts/bootstrap/bootstrap-tab.js" type="text/javascript"></script>
    <script src="~/Scripts/bootstrap/bootstrap-treeview.js"></script>
    <script src="~/Scripts/bootstrap/bootstrap-table.min.js" type="text/javascript"></script>
    <script src="~/Scripts/bootstrap/bootstrap-table-zh-CN.min.js" type="text/javascript"></script>
    <script src="~/Scripts/bootstrap/bootstrap-switch.js"></script>
    <script src="~/Scripts/public.js" type="text/javascript"></script>
    <!--[if lte IE 9]>
    <script src="~/Scripts/respond.min.js"></script>
    <script src="~/Scripts/html5.js"></script>
    <![endif]-->
</head>

<body class="content-body">
    <div class="main_content">
        <div class="main_head">
            <div class="container_title">版本管理</div>
            <div class="container_btn" id="btnGroup"></div>
        </div>
        <div class="main_force">
            <div class="main_table_box">
                <div class="main_center_icon01"><img src="~/Images/pic03.png" /></div>
                <div class="main_center_icon02"><img src="~/Images/pic04.png" /></div>
                <div class="scroll_patch"></div>               
                <!--table-->
                <div class="main_table_left">
                    <div class="left_tree" id="version_tree"></div>
                </div>
                <div class="main_table_center">
                    <div class="main_table_con">
                        <table class="table" id="version_table"></table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @* 新建弹窗 开始 *@
    <script id="versionAddWin" type="text/html">
        <div class="win_box02">
            <div class="win_box02_1">
                <div class="win_box02_2">
                    <form id="userForm">
                        <div class="win_input_box">
                            <div class="win_input_center">
                                <label for="inputPassword">所属机构：</label>
                                <input type="text" class="win_input02" id="unit_name" value="" style="width:400px;" readonly /><span class="Required">*</span>
                                <input type="hidden" id="unit" />
                                <div id="unitTree" style="display: none;min-width:400px" class="tree"></div>
                            </div>
                        </div>
                        <div class="win_input_box">
                            <div class="win_input_center">
                                <label for="inputPassword">版本名称：</label>
                                <input type="text" class="win_input" id="" name="" value="" style="width:400px;" /><span class="Required">*</span>
                            </div>
                        </div>
                        <div class="win_input_box">
                            <div class="win_input_center">
                                <label for="inputPassword">创建者：</label>
                                <input type="text" class="win_input" id="" name="" value="" style="width:400px;" readonly>
                            </div>
                        </div>
                        <div class="win_input_box">
                            <div class="win_input_center">
                                <label for="inputPassword">创建时间：</label>
                                <input type="text" class="win_input" id="" name="" value="" style="width:400px;" readonly>
                            </div>
                        </div>
                        <div class="win_input_box">
                            <div class="win_input_center">
                                <label>状态：</label>
                                <input type="checkbox" id="switch" style="width:400px;" />
                            </div>
                        </div>
                        <div class="win_textarea_box">
                            <div class="win_textarea_center">
                                <label for="inputPassword">备注：</label>
                                <textarea class="win_textarea" rows="3" id="Us_remark" name="Us_remark" style="width:400px;"></textarea>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </script>


    @* 新建弹窗 结束 *@
    <script type="text/javascript">
        var unitID = '-1';//机构ID全局变量
        $(function () {
            GetVersionsList();
            loadControl();
            getUnit();
            $(window).resize(function () {
                $('#version_table').bootstrapTable('resetView', {
                    height: $(window).height() - 74.5
                });
            });
        });      

        //获取左侧机构树
        function getUnit() {
            $.ajax({
                type: "get",
                url: '/api/UnitManage/GetUnitCombotree',
                dataType: "json",
                async: false,
                success: function (result) {
                    var json = JSON.parse(result);
                    json[0].state = { selected: true };
                    $('#version_tree').treeview({
                        data: json,         // 数据源
                        highlightSelected: true,    //是否高亮选中
                        multiSelect: false,    //多选
                        nodeSelected: function (event, node) {

                        },
                        onNodeExpanded: function (event, data) { },

                        onNodeSelected: function (event, data) {
                            //alert(data.nodeId);
                        }

                    });
                    $('#version_tree').on('nodeSelected', function (event, data) {
                        unitID = data.id;
                        GetVersionsList();
                    });
                }
            });
        }


        //生成版本管理列表表格
        function GetVersionsList() {
            $('#version_table').bootstrapTable('destroy');
            $('#version_table').bootstrapTable({
                url: '/api/VersionManage/GetVersionsList',
                contentType: 'application/x-www-form-urlencoded',//ajax的contentType是设置的http的请求头，这个头的目的是告诉服务器端，我的请求参数是什么格式的数据，你要按照对应的格式去处理，就这样。
                //默认的是 "application/x-www-form-urlencoded; charset=UTF-8"，也就是普通的表单提交的格式，当然你也可以覆盖，比如"application/json",这样服务端可以直接拿到一个json请求参数。而不是一个一个的key value
                queryParamsType: 'undefined',//queryParamsType: 'limit', // undefined (这里是根据不同的参数，选择不同的查询的条件)
                method: 'get',
                checkboxHeader: true,
                pagination: true,
                pageNumber: 1,
                pageSize: 10,
                queryParams: function queryParams(params) {   //设置查询参数
                    var keyWord = "";//搜索关键字
                    var param = {
                        filter: keyWord + ",UID:" + unitID,
                        PageSize: params.pageSize,
                        PageIndex: params.pageNumber
                    };
                    return param;
                },
                striped: true,
                height: $('.main_table_con').height() - 1,
                //onlyInfoPagination: false,
                sidePagination: "server", //表示服务端分页
                pageList: [10, 20, 30, 50, 100],
                paginationLoop: false,
                clickToSelect: true,
                paginationpretext: '上一页',
                paginationnexttext: '下一页',
                columns: [
                    { field: 'v_Id', visible: false },
                    { field: 'v_UnitId', visible: false },
                    { checkbox: true, halign: 'center', width: '3%' },                  
                    {
                        field: 'v_UnitName', title: '所属机构', halign: 'left', width: '20%', formatter: function (value, row, index) {
                            return "<span class=\"hxm\" title=\"" + value + "\">" + value + "</span>";
                        }
                    },
                    {
                        field: 'v_VersionName', title: '版本名称', halign: 'left', width: '20%', formatter: function (value, row, index) {
                            return "<span class=\"hxm\" title=\"" + value + "\">" + value + "</span>";
                        }
                    },
                    {
                        field: 'v_Creator', title: '创建者', halign: 'left', width: '10%', formatter: function (value, row, index) {
                            return "<span class=\"hxm\" title=\"" + value + "\">" + value + "</span>";
                        }
                    },
                    {
                        field: 'v_CreationTime', title: '创建时间', halign: 'left', width: '15%', formatter: function (value, row, index) {
                            return "<span class=\"hxm\" title=\"" + value + "\">" + value + "</span>";
                        }
                    },                   
                    {
                        field: 'v_Status', title: '状态', halign: 'left', width: '5%', formatter: function (value, row, index) {
                            if (value.toLowerCase() == 'true') {
                                return "<span style=\"color:#4e9b10;\">" + "启用" + "</span>";
                            } else {
                                return "<span style=\"color:#ff0000;\">" + "禁用" + "</span>";
                            }
                        }
                    },
                    {
                        field: 'v_Remark', title: '备注', halign: 'left', width: '22%', formatter: function (value, row, index) {
                            return "<span class=\"hxm\" title=\"" + value + "\">" + value + "</span>";
                        }
                    }
                ],
                responseHandler: function (res) {
                    res = JSON.parse(res);
                    return {
                        "total": res.total,
                        "rows": res.rows
                    };
                },
                onLoadSuccess: function (data) {

                }
            });
        }

        //新增用户
        function addVersions() {
            var unit = $('#version_tree').treeview('getSelected');
            if (unit.length == 0) {
                layer.alert('请选择机构！', {
                    icon: 0,
                    yes: function (index) {
                        layer.close(index);
                    }
                });
                return;
            }
            layer.open({
                title: '新增用户',
                type: 1,
                area: ['600px', '460px'],
                btn: ['确定', '取消'],
                btnAlign: 'c',
                content: $('#versionAddWin').html(),
                yes: function (index, layero) {
                    addSave(index);
                },
                cancel: function (index) {
                    layer.close(index);
                }
            });
            $('#switch').bootstrapSwitch({
                onText: "启用",
                offText: "禁用",
                onColor: "success",
                offColor: "info",
                size: "small",
                onSwitchChange: function (event, state) {

                }
            });
            getUnitTree('unit_name', 'unitTree', 'UnitID');
            $('#unit_name').val(unit[0].text);
            $('#UnitID').val(unit[0].id);
        }
        //新增/修改确定
        function addSave(farIndex, type, data) {
            var UnitId = getValueAndValidate('UnitID');
          
            var Us_type = getValueAndValidate('Us_type');
            if (Us_type == '') {
                layer.alert('版本名称不能为空！', {
                    title: '提示',
                    icon: 2,
                    yes: function (index) {
                        layer.close(index);
                    }
                });
                return;
            }
            var Us_remark = getValueAndValidate('Us_remark');
            var Us_status = $('#switch').bootstrapSwitch('state');
            var Unit_name = getValueAndValidate('unit_name');
            var url;
            var data;
            if (type != undefined && type != null && type == 'edit') {
                data = { UnitID: UnitId, Us_id: data[0].Us_id,Unit_name:Unit_name, Us_name: Us_name, Us_account: Us_account, Us_type: Us_type, Us_remark: Us_remark, Us_status: Us_status };
                url = "/ api/VersionManage/Edit";
            } else {
                data = { UnitID: UnitId, Unit_name: Unit_name, Us_name: Us_name, Us_account: Us_account, Us_Password: Us_Password, Us_type: Us_type, Us_remark: Us_remark, Us_status: Us_status };
                url = "/api/VersionManage/AddVersion";
            }
            var meth;
            if (type != undefined && type != null && type == 'edit') {
                meth = 'put';
            } else {
                meth = 'post';
            }
            operationAction({
                url: url, data: data, type: meth, successRollback: function (res) {
                            if (res.Success) {
                                layer.alert(res.Message, {
                                    title: '提示',
                                    icon: 1,
                                    yes: function (index) {
                                        layer.close(farIndex);
                                        layer.close(index);
                                        GetVersionsList();
                                    }
                                });
                            } else {
                                layer.alert(res.Message, {
                                    title: '提示',
                                    icon: 2,
                                    yes: function (index) {
                                        layer.close(index);
                                    }
                                });
                            }
                }

            });
           
        }

        //修改用户
        function editVersions() {
            var row = $('#version_table').bootstrapTable('getSelections');
            if (!row || row == null || row.length == 0) {
                layer.alert('请选择要修改的行！', {
                    title: '提示',
                    icon: 0,
                    yes: function (index) {
                        layer.close(index);
                    }
                });
                return;
            }
            if (row.length > 1) {
                layer.alert('每次只能选择一行修改！', {
                    title: '提示',
                    icon: 0,
                    yes: function (index) {
                        layer.close(index);
                    }
                });
                return;
            }
            layer.open({
                title: '修改用户',
                type: 1,
                area: ['600px', '460px'],
                btn: ['确定', '取消'],
                btnAlign: 'c',
                content: $('#versionAddWin').html(),
                yes: function (index, layero) {
                    addSave(index, 'edit', row);
                },
                cancel: function (index) {
                    layer.close(index);
                }
            });
            $('#switch').bootstrapSwitch({
                onText: "启用",
                offText: "禁用",
                onColor: "success",
                offColor: "info",
            });
            getUnitTree('unit_name', 'unitTree', 'UnitID');
            $('#unit_name').val(row[0].Unit_name);
            $('#UnitID').val(row[0].UnitID);
            $('#Us_name').val(row[0].Us_name);
            $('#Us_account').val(row[0].Us_account);
            $('#Us_type').val(row[0].Us_type);
            $('#Us_remark').val(row[0].Us_remark);
            $('#switch').bootstrapSwitch('state', $.trim(row[0].Us_status).toLowerCase());
        }
        //删除用户
        function deleteVersion() {
            var row = $('#version_table').bootstrapTable('getSelections');
            if (!row || row == null || row.length == 0) {
                layer.alert('请选择要删除的行！', {
                    title: '提示',
                    icon: 0,
                    yes: function (index) {
                        layer.close(index);
                    }
                });
                return;
            }

            layer.confirm('确定要删除选中的数据吗？', {
                title: '提示',
                icon: 3,
                btn: ['确定', '取消'] //按钮
            }, function () {
                var ids = '';
                for (var i = 0; i < row.length; i++) {
                    ids += row[i].v_Id + ',';
                }
                ids = ids.substring(0, ids.length - 1);

                operationAction({
                    url: '/api/VersionManage/Delete', data: ids, type: 'delete', successRollback: function (res) {
                        if (res.Success) {
                            layer.alert(res.Message, {
                                title: '提示',
                                icon: 1,
                                yes: function (index) {
                                    layer.close(index);
                                    GetVersionsList();
                                }
                            });
                        } else {
                            layer.alert(res.Message, {
                                title: '提示',
                                icon: 2,
                                yes: function (index) {
                                    layer.close(index);
                                }
                            });
                        }

                    }
                });
            }, function () {

            });
        }

        //禁用/冻结
        function switchUserStops(type, flag) {
            var row = $('#version_table').bootstrapTable('getSelections');
            if (!row || row == null || row.length == 0) {
                layer.alert('请选择要' + flag + '的用户！', {
                    title:'提示',
                    icon: 0,
                    yes: function (index) {
                        layer.close(index);
                    }
                });
                return;
            }
            layer.confirm('确定要' + flag + '选中的用户吗？', {
                title: '提示',
                icon: 3,
                btn: ['确定', '取消']
            }, function () {
                var ids = '';
                for (var i = 0; i < row.length; i++) {
                    ids += row[i].Us_id + ',';
                }
                ids = ids.substring(0, ids.length - 1);
                ids = ids + '|' + type;

                operationAction({
                    url: '/api/UserManage/ForbiddenUserStatus', data: ids, type: 'put', successRollback: function (res) {
                        if (res.Success) {
                            layer.alert(res.Message, {
                                title: '提示',
                                icon: 1,
                                yes: function (index) {
                                    layer.close(index);
                                    GetVersionsList();
                                }
                            });
                        } else {
                            layer.alert(res.Message, {
                                title: '提示',
                                icon: 2,
                                yes: function (index) {
                                    layer.close(index);
                                }
                            });
                        }
                    }
                });
            }, function () {

            });
        }

        //按钮
        function loadControl() {
            //类型控件
            var controlMenuHtml = "<div style=\"display:block;width:0px;height:0px\"><button href=\"#\"   id=\"btnAddUser11111\" onclick=\"\" ></button> </div>";
            //从父页面中获取方法判断是否有该操作的权限
            if (parent.checkUserAndPermission('/api/UserManage/AddUser')) {
                controlMenuHtml += "<button  class=\"button button_blue\" onclick=\"addVersions()\">新增</button>";
            }
            if (parent.checkUserAndPermission('/api/UserManage/EditUser')) {
                controlMenuHtml += "<button class=\"button button_blue\" onclick=\"editVersions()\">修改</button>";
            }
            if (parent.checkUserAndPermission('/api/UserManage/DeleteUser')) {
                controlMenuHtml += "<button class=\"button button_orange\" onclick=\"deleteVersion()\">删除</button>";
            }

            if (parent.checkUserAndPermission('/api/UserManage/ChangeUserStatus')) {
                controlMenuHtml += "<button class=\"button button_green\" onclick=\"switchUserStatus('true', '启用')\">启用</button>";
            }

            if (parent.checkUserAndPermission('/api/UserManage/ForbiddenUserStatus')) {
                controlMenuHtml += "<button class=\"button button_red\" onclick=\"switchUserStops('false', '禁用')\">禁用</button>";
            }               
                controlMenuHtml += "<div class=\"head-icon-right01\"><img class=\"logo-img\" src=\"../Images/pic02.png\" /></div>";

            $('#btnGroup').html(controlMenuHtml);//将控件加入页面
           // $.parser.parse('#btnGroup');
        }
    </script>


</body>
</html>
@Html.Raw(StaticVariable.GetPermissionAlert())

